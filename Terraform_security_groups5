provider "nsxt" {
  # Configure your NSX-T environment
  username               = var.nsxt_username
  password               = var.nsxt_password
  host                   = var.nsxt_host
  allow_unverified_ssl   = true
}

locals {
  # Load preprocessed input from the Python script
  sec_groups = jsondecode(file("${path.module}/parsed_secgroups.json"))
}

resource "nsxt_policy_group" "secgroup" {
  for_each     = local.sec_groups
  display_name = each.value.display_name

  dynamic "criteria" {
    for_each = each.value.criteria
    content {
      conjunction_operator = criteria.value.conjunction_operator

      dynamic "expression" {
        for_each = criteria.value.expressions
        content {
          dynamic "nested_expression" {
            for_each = expression.value.resource_type == "NestedExpression" ? [expression.value] : []
            content {
              dynamic "expression" {
                for_each = nested_expression.value.expressions
                content {
                  key         = expression.value.key
                  operator    = expression.value.operator
                  member_type = expression.value.member_type
                  value       = expression.value.value
                }
              }
            }
          }

          dynamic "path_expression" {
            for_each = expression.value.resource_type == "PathExpression" ? [expression.value] : []
            content {
              paths = path_expression.value.paths
            }
          }

          dynamic "ip_address_expression" {
            for_each = expression.value.resource_type == "IPAddressExpression" ? [expression.value] : []
            content {
              ip_addresses = ip_address_expression.value.ip_addresses
            }
          }

          dynamic "condition" {
            for_each = expression.value.resource_type == "Condition" ? [expression.value] : []
            content {
              key         = condition.value.key
              operator    = condition.value.operator
              member_type = condition.value.member_type
              value       = condition.value.value
            }
          }
        }
      }
    }
  }
}
