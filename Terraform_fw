resource "nsxt_policy_security_policy_rule" "dfw_rule" {
  for_each = merge([
    for section in local.firewall_yaml["Firewall"] : {
      for rule in section.rules :
      "${section["id"]}.${rule["id"]}" => {
        section_id = section["id"]
        rule_data  = rule
      }
    }
  ]...)

  display_name      = each.value.rule_data.display_name
  description       = try(each.value.rule_data.description, null)
  sequence_number   = try(each.value.rule_data.sequence_number, null)

  source_groups = contains(try(each.value.rule_data.source_groups, []), "ANY") ? null
                 : try(flatten([for g in each.value.rule_data.source_groups : g]), null)

  destination_groups = contains(try(each.value.rule_data.destination_groups, []), "ANY") ? null
                       : try(flatten([for g in each.value.rule_data.destination_groups : g]), null)

  services = contains(try(each.value.rule_data.services, []), "ANY") ? null
             : try(flatten([for s in each.value.rule_data.services : s]), null)

  scope = contains(try(each.value.rule_data.scope, []), "ANY") ? null
          : try(flatten([for s in each.value.rule_data.scope : s]), null)

  action     = each.value.rule_data.action
  logged     = try(each.value.rule_data.logged, false)
  disabled   = try(lower(each.value.rule_data.disabled) == "true", false)
  profiles   = try(flatten([for p in try(each.value.rule_data.profiles, []) : p]), null)

  policy_id  = nsxt_policy_security_policy.dfw_policy[each.value.section_id].id
}
